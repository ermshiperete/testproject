<?xml version="1.0" encoding="utf-8" ?>
<IDLConversions xmlns="http://dummy.sil.org/IDLConversions.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ParamTypeConversion>
    <Attribute>out,size_is,~retval</Attribute>
    <NewAttribute>-out,-size_is</NewAttribute>
    <Match>OLECHAR\s+\*\s+prgchBuf</Match>
    <Replace>IntPtr</Replace>
  </ParamTypeConversion>
  <ParamTypeConversion>
		<Attribute>out,size_is,~retval</Attribute>
		<NewAttribute>MarshalAs,-out,-size_is</NewAttribute>
		<NewAttrValue>UnmanagedType.CustomMarshaler, MarshalTypeRef=typeof(ArrayPtrMarshaler)</NewAttrValue>
		<Match>^\s*(?&lt;type&gt;[^\s]+)(\s*\*)*</Match>
		<Replace>ArrayPtr/*${type}[]*/</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Attribute>string</Attribute>
		<Match>(char|wchar_t|OLECHAR)\s*(\*(\s\*)?|[^\[]*\s*\[\s*\])</Match>
		<Replace>System.String</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Attribute>size_is</Attribute>
		<NewAttribute>MarshalAs,-size_is</NewAttribute>
		<NewAttrValue>UnmanagedType.LPWStr</NewAttrValue>
		<Match>OLECHAR\s*(\*(\s\*)?|[^\[]*\s*\[\s*\])</Match>
		<Replace>System.String</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Attribute>size_is</Attribute>
		<NewAttribute>MarshalAs</NewAttribute>
		<NewAttrValue>UnmanagedType.LPArray</NewAttrValue>
		<Match>^\s*(?&lt;type&gt;[^\s]+)</Match>
		<Replace>${type}[]</Replace>
		<fEnd>false</fEnd>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<NewAttribute>MarshalAs</NewAttribute>
		<NewAttrValue>UnmanagedType.IUnknown</NewAttrValue>
		<Match>IUnknown\s*\*(\s*\*)*</Match>
		<Replace>System.Object</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<NewAttribute>MarshalAs</NewAttribute>
		<NewAttrValue>UnmanagedType.IDispatch</NewAttrValue>
		<Match>IDispatch\s*\*(\s*\*)*</Match>
		<Replace>System.Object</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>void\s*\*(\s*\*)*</Match>
		<Replace>System.IntPtr</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Attribute>~out</Attribute>
		<Match>(LPRECT|LPCRECT|RECT\s*\*)</Match>
		<Replace>ref Rect</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Attribute>~out</Attribute>
		<Match>(GUID|CLSID)\s*\*</Match>
		<Replace>ref System.Guid</Replace>
	</ParamTypeConversion>
	<!-- all pointer conversions that include * before this point! -->
	<ParamTypeConversion>
		<Match>\s*\*</Match>
		<Replace></Replace>
		<fEnd>false</fEnd>
	</ParamTypeConversion>
	<!-- HANDLE_PTR is defined as unsigned long on 32b and unsigned __int64 on 64b (see Microsoft 
		Interface Definition Language (MIDL): 64-Bit Porting Guide 
		http://msdn.microsoft.com/en-us/library/ms810720.aspx).
		In .NET a IntPtr is used for a handle. -->
	<ParamTypeConversion>
		<Match>HANDLE_PTR</Match>
		<Replace>System.IntPtr</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>(HVO|PropTag)</Match>
		<Replace>System.Int32</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>(LPCOLESTR|LPOLESTR)</Match>
		<Replace>System.String</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>(OLE_XPOS_HIMETRIC|OLE_YPOS_HIMETRIC|OLE_XSIZE_HIMETRIC|OLE_YSIZE_HIMETRIC)</Match>
		<Replace>System.Int32</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>(unsigned char|byte|BYTE)</Match>
		<Replace>System.Byte</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>(COLORREF|DWORD)</Match>
		<Replace>System.UInt32</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>(unsigned short|WORD)</Match>
		<Replace>System.UInt16</Replace>
	</ParamTypeConversion>
	<!-- NOTE: IDL spec defines long as 32-bit value, even in a 64-bit environment -->
	<ParamTypeConversion>
		<Match>(unsigned long|ULONG)</Match>
		<Replace>System.UInt32</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>(unsigned int|UINT)</Match>
		<Replace>System.UInt32</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>unsigned hyper</Match>
		<Replace>System.UInt64</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>SAFEARRAY\s*\(\s*(?&lt;type&gt;[^\) ]+)\s*\)</Match>
		<Replace>${type}[]</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<NewAttribute>MarshalAs</NewAttribute>
		<NewAttrValue>UnmanagedType.VariantBool</NewAttrValue>
		<Match>(VARIANT_BOOL|ComBool)</Match>
		<Replace>System.Boolean</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>__int64</Match>
		<Replace>System.Int64</Replace>
	</ParamTypeConversion>
	<!-- NOTE: IDL spec defines long as 32-bit value, even in a 64-bit environment -->
	<ParamTypeConversion>
		<Match>(^|\s+)(int|bool|long|BOOL)</Match>
		<Replace>System.Int32</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>short</Match>
		<Replace>System.Int16</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>hyper</Match>
		<Replace>System.Int64</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>(wchar_t|OLECHAR)</Match>
		<Replace>System.UInt16</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>float</Match>
		<Replace>System.Single</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>double</Match>
		<Replace>System.Double</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>HRESULT</Match>
		<Replace>System.Int32</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>SCODE</Match>
		<Replace>System.Int32</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<NewAttribute>MarshalAs</NewAttribute>
		<NewAttrValue>UnmanagedType.BStr</NewAttrValue>
		<Match>BSTR</Match>
		<Replace>System.String</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>LPSTR</Match>
		<Replace>System.String</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>LPWSTR</Match>
		<Replace>System.String</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<NewAttribute>MarshalAs</NewAttribute>
		<NewAttrValue>UnmanagedType.Struct</NewAttrValue>
		<Match>VARIANT</Match>
		<Replace>System.Object</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>DECIMAL</Match>
		<Replace>System.Decimal</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>DATE</Match>
		<Replace>System.DateTime</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>REFIID</Match>
		<Replace>ref System.Guid</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>(GUID|CLSID)</Match>
		<Replace>System.Guid</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>CURRENCY</Match>
		<Replace>System.Decimal</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>(char|small)</Match>
		<Replace>System.SByte</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>SilTime</Match>
		<Replace>System.Int64</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>(LPRECT|LPCRECT)</Match>
		<Replace>ref Rect</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>RECT</Match>
		<Replace>Rect</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>(LPPOINT|LPCPOINT)</Match>
		<Replace>ref System.Drawing.Point</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>POINT</Match>
		<Replace>System.Drawing.Point</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>HDC</Match>
		<Replace>System.IntPtr</Replace>
	</ParamTypeConversion>
	<ParamNameConversion>
		<Match>^p</Match>
		<Replace>_</Replace>
	</ParamNameConversion>
	<ParamTypeConversion>
		<Match>VwSelLevInfo</Match>
		<Replace>SelLevInfo</Replace>
	</ParamTypeConversion>
	<ParamTypeConversion>
		<Match>IStream</Match>
		<Replace>System.Runtime.InteropServices.ComTypes.IStream</Replace>
	</ParamTypeConversion>
	<!-- Interfaces : any type beginning with 'I' (TODO Improve this) -->
	<ParamTypeConversion>
		<Attribute>~size_is</Attribute>
		<NewAttribute>MarshalAs</NewAttribute>
		<NewAttrValue>UnmanagedType.Interface</NewAttrValue>
		<Match>^\s*(?&lt;type&gt;I[^\s]+)</Match>
		<Replace>${type}</Replace>
	</ParamTypeConversion>
</IDLConversions>
